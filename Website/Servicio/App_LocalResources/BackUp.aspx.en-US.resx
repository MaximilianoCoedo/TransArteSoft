<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="backUpsResource1.Text" xml:space="preserve">
    <value>Backups</value>
  </data>
  <data name="backUpsResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="btnBackUpResource1.Text" xml:space="preserve">
    <value>Database guard</value>
  </data>
  <data name="btnBackUpResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="btnBackUpTOOLResource1.Text" xml:space="preserve">
    <value>Make a backup of the database partitioning in quantity volumes</value>
  </data>
  <data name="btnBackUpTOOLResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="cantidadVolumenResource1.Text" xml:space="preserve">
    <value>Number of partitions</value>
  </data>
  <data name="cantidadVolumenResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="gridBackUpsTOOLResource1.Text" xml:space="preserve">
    <value>This grid shows the back up made</value>
  </data>
  <data name="gridBackUpsTOOLResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="help_dialogResource1.Text" xml:space="preserve">
    <value>&lt;span class='ui-icon ui-icon-comment' style='float: left; margin-right: .3em;'&gt;&lt;/span&gt;Helpdesk</value>
  </data>
  <data name="help_dialog_contentResource1.Text" xml:space="preserve">
    <value>&lt;span class="ui-icon ui-icon-info" style="float: left; margin-right: .3em;"&gt;&lt;/span&gt;
        &lt;strong&gt;Help Back Up the Database:&lt;/strong&gt;
        &lt;br&gt;&lt;hr size="5" noshade&gt;&lt;br&gt;
           In this screen you can:
        &lt;br&gt;&lt;br&gt;
        &lt;span class="ui-icon ui-icon-radio-off" style="float: left; margin-right: .3em;"&gt;&lt;/span&gt;
        Perform back up or back up the database. -
        &lt;br&gt;&lt;br&gt;&lt;hr size="5" noshade&gt;
        &lt;br&gt;
        &lt;span class="ui-icon ui-icon-play" style="float: left; margin-right: .3em;"&gt;&lt;/span&gt;
        &lt;strong&gt;Realizar Back Up:&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
         To back up the database, you must enter the size in bytes in which to partition the database,
           to enter the size automatically calculates the number of volumes that are generated. -
        &lt;br&gt;&lt;br&gt;&lt;hr size="5" noshade&gt;</value>
  </data>
  <data name="help_dialog_TOOLResource1.Text" xml:space="preserve">
    <value>Aid box Back up the Database</value>
  </data>
  <data name="help_dialog_TOOLResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblTamanioBDResource1.Text" xml:space="preserve">
    <value>Size of the Database:</value>
  </data>
  <data name="lblTamanioResource1.Text" xml:space="preserve">
    <value>Size:</value>
  </data>
  <data name="lblTamanioResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblvolResource1.Text" xml:space="preserve">
    <value>Volume / is:</value>
  </data>
  <data name="lblvolResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="legendTitleResource1.Text" xml:space="preserve">
    <value>Ward of the database:</value>
  </data>
  <data name="legendTitleResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="msgErrorResource1.Text" xml:space="preserve">
    <value>There was an error</value>
  </data>
  <data name="msgErrorResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="msgErrorTamanioResource1.Text" xml:space="preserve">
    <value>You must enter the maximum size of the back-up</value>
  </data>
  <data name="msgErrorTamanioResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="msgProcesandoResource1.Text" xml:space="preserve">
    <value>Wait a minute!</value>
  </data>
  <data name="msgProcesandoResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="nombreBackUpResource1.Text" xml:space="preserve">
    <value>Description Back-Up</value>
  </data>
  <data name="nombreBackUpResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="PageResource1.Title" xml:space="preserve">
    <value>BackUp</value>
  </data>
  <data name="txtTamanioTOOLResource1.Text" xml:space="preserve">
    <value>Enter the maximum size in bytes to partition the database</value>
  </data>
  <data name="txtTamanioTOOLResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="jsGridLibraryResource.Text" xml:space="preserve">
    <value>../script/jquery.jqGrid-4.4.1/src/i18n/grid.locale-en.js</value>
  </data>
</root>